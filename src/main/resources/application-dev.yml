spring:
  application:
    name: nuri-dev

  datasource:
    driver-class-name:
      ${POSTGRES_DRIVER_NAME}
    url:
      ${POSTGRES_URL}
    username:
      ${POSTGRES_USERNAME}
    password:
      ${POSTGRES_ROOT_PASSWORD}
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: update

  kafka:
    bootstrap-servers:
      - kafka1:29092
      - kafka2:29092
      - kafka3:29092
    client-id: chat-service
    producer:
      acks: all
      retries: 3
      batch-size: 16384
      buffer-memory: 33554432
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      transaction-id-prefix: chat
    consumer:
      group-id: chat-group
      auto-offset-reset: earliest
      enable-auto-commit: false
      max-poll-records: 100
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    listener:
      ack-mode: manual
    properties:
      security.protocol: PLAINTEXT


  graphql:
    schema:
      locations: classpath*:graphql/**/
    graphiql:
      enabled: true
    cors:
      allowed-origins: ${FRONTEND_URL}

  data:
    mongodb:
      uri: ${MONGODB_URI}
      database: ${MONGODB_DATABASE}

oauth2:
  provider:
    google:
      base-url: ${GOOGLE_BASE_URL}
      client-id: ${GOOGLE_CLIENT_ID}
      redirect-url: ${GOOGLE_REDIRECT_URL}
      client-secret: ${GOOGLE_CLIENT_SECRET}
      grant-type: ${GOOGLE_GRANT_TYPE}
    tiktok:
      base-url: ${TIKTOK_BASE_URL}
      client-id: ${TIKTOK_CLIENT_ID}
      redirect-url: ${TIKTOK_REDIRECT_URL}
      client-secret: ${TIKTOK_CLIENT_SECRET}
      grant-type: ${TIKTOK_GRANT_TYPE}
    kakao:
      base-url: ${KAKAO_BASE_URL}
      client-id: ${KAKAO_CLIENT_ID}
      redirect-url: ${KAKAO_REDIRECT_URL}
      client-secret: ${KAKAO_CLIENT_SECRET}
      grant-type: ${KAKAO_GRANT_TYPE}
    facebook:
      base-url: ${FACEBOOK_BASE_URL}
      client-id: ${FACEBOOK_CLIENT_ID}
      redirect-url: ${FACEBOOK_REDIRECT_URL}
      client-secret: ${FACEBOOK_CLIENT_SECRET}
      grant-type: ${FACEBOOK_GRANT_TYPE}
  new-user:
    caching-time: ${USER_INFO_CACHING_TIME}

jwt:
  secret: ${JWT_SECRET}
  access-expiration: ${JWT_ACCESS_EXPIRATION}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION}

session:
  chat-expiration: ${CHAT_EXPIRATION}

redis:
  host: ${REDIS_HOST}
  port: ${REDIS_PORT}
  password: ${REDIS_PASSWORD}

web:
  front-url: ${FRONTEND_URL}

chat:
  broadcast-threshold: ${BROADCAST_THRESHOLD}

logging:
  level:
    org.hibernate.sql: debug