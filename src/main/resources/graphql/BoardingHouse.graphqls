extend type Mutation {
    createBoardingRoom(createBoardingRoomInput : CreateBoardingRoomRequest!) : String!
}

input CreateBoardingRoomRequest{
    files : [String!]!
    boardingRoomInfo : UpsertBoardingRoomInfo!
    contractPeriod : [Int!]!,
    options : [String]!
}

input UpsertBoardingRoomInfo {
    name : String!
    description : String
    monthlyRent : Int!
    headCount : Int!
}

type BoardingRoomInfo {
    roomId : String
    boardingHouseId : String
    name : String
    description : String
    monthlyRent : Int
    headCount : Int
    status : RoomStatus
    boardingRoomOption : [BoardingRoomOption]
    boardingRoomFile : [BoardingRoomFile]
    contractPeriod : [ContractPeriod]
    day : String
    host : HostInfo
}

type BoardingRoomOption {
    optionId : String
    roomId : String
    name : String
}

type BoardingRoomFile {
    fileId : String
    boardingRoomId : String
    url : String
}

type ContractPeriod {
    contractPeriodId : String
    roomId : String
    contractPeriod : Int
}

enum RoomStatus {
    EMPTY_ROOM
    FULL
    REMAIN
}