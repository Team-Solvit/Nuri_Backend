type User {
    id : String
    userId : String
    country : String
    language : String
    name : String
    email : String
    introduce : String
    profile : String
    role : Role
}

type UserProfileResponseDto {
    postCount: Int!
    followerCount: Int!
    followingCount: Int!
    profile: String!
    userId: String!
}

type Query {
    getUserProfile(userId: String!): UserProfileResponseDto!
}

type Mutation {
    changeProfile(profile: String!): Boolean!
}

enum Role {
    ANONYMOUS
    USER
    INTERNATIONAL_STUDENT
    HOST
    THIRD_PARTY
    OPERATOR
}

type Host {
    callNumber : String
    user : User
}

type Boarder {
    callNumber : String
    gender : String
    user : User
}