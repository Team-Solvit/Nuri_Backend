scalar DateTime
scalar UUID

type Query {
    readMessages(room_id: String!): [ChatRecord]
}

type Mutation {
    createRoom(input: RoomCreateRequestInput!): Room
}

type Sender {
    name: String!
    profile: String!
}

type ReplyChat {
    chatId: String!
    contents: String!
    name: String!
}

type ChatRecord {
    id: UUID!

    roomId: String!
    sender: Sender!

    createdAt: DateTime!

    contents: String!
    replyChat: ReplyChat
}

input RoomRequestInput {
    name: String
    profile: String
}

input RoomCreateRequestInput {
    roomRequestDto: RoomRequestInput
    users: [String!]!
}

type Room {
    id: ID!
    name: String
    profile: String
    users: [String!]!
}