networks:
  backend-net:
    driver: bridge
  kafka-net:
    driver: bridge

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - backend-net
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - backend-net

  kafka1:
    container_name: kafka1
    image: confluentinc/cp-kafka
    ports:
      - "9092:9092"
    volumes:
      - kafka1-data:/bitnami/kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:29092
      KAFKA_LISTENERS: INTERNAL://kafka1:29092,CONTROLLER://:29093
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka1:29093,2@kafka2:29093,3@kafka3:29093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      CLUSTER_ID: dee43564-ced1-4eb7-913d-93a2b4d619c1
    networks:
      - kafka-net

  kafka2:
    container_name: kafka2
    image: confluentinc/cp-kafka
    ports:
      - "9093:9092"
    volumes:
      - kafka1-data:/bitnami/kafka
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:29092
      KAFKA_LISTENERS: INTERNAL://kafka2:29092,CONTROLLER://:29093
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka1:29093,2@kafka2:29093,3@kafka3:29093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      CLUSTER_ID: dee43564-ced1-4eb7-913d-93a2b4d619c1
    networks:
      - kafka-net

  kafka3:
    container_name: kafka3
    image: confluentinc/cp-kafka
    ports:
      - "9094:9092"
    volumes:
      - kafka1-data:/bitnami/kafka
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:29092
      KAFKA_LISTENERS: INTERNAL://kafka3:29092,CONTROLLER://:29093
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka1:29093,2@kafka2:29093,3@kafka3:29093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      CLUSTER_ID: dee43564-ced1-4eb7-913d-93a2b4d619c1
    networks:
      - kafka-net

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "9999:8080"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: local-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:29092,kafka2:29092,kafka3:29092
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    networks:
      - kafka-net

  nuri:
    ports:
      - "8080:8080"
    image: solvit25/nuri:latest
    container_name: nuri
    networks:
      - kafka-net
      - backend-net
    env_file:
      /home/deploy/env/prod.env
    depends_on:
      - postgres
      - redis
      - kafka1
      - kafka2
      - kafka3

volumes:
  kafka1-data:
  kafka2-data:
  kafka3-data:
  postgres-data: